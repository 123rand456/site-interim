---
import { base } from '../../utils/constants';
import MainLayout from '../../layouts/MainLayout.astro';
import { formatReadingMetrics } from '../../utils/readingMetrics';

const posts = await Promise.all(
  Object.entries(import.meta.glob('./*.md', { eager: true })).map(
    async entry => {
      const resolved = entry[1] as { url: string; frontmatter: any };

      return {
        url: resolved.url,
        frontmatter: resolved.frontmatter,
        readingMetrics: {
          wordCount: resolved.frontmatter.wordCount,
          readTimeMinutes: resolved.frontmatter.readingTime,
        },
      };
    }
  )
);

posts.sort(
  (a, b) =>
    new Date(b.frontmatter.dateUpdated).getTime() -
    new Date(a.frontmatter.dateUpdated).getTime()
);

// Define breadcrumb items
const breadcrumbItems = [
  {
    title: 'Essays',
    url: `${base}essays`,
    isCurrent: true,
  },
];
---

<MainLayout
  title="Essays"
  description="A collection of essays on various topics"
  breadcrumbItems={breadcrumbItems}
>
  <h1 class="text-4xl font-bold mb-8">Essays</h1>
  <div class="space-y-8">
    {
      posts.map(post => (
        <article class="border-b border-gray-200 dark:border-gray-700 pb-8">
          <h2 class="text-2xl font-semibold mb-2">
            <a
              href={post.url}
              class="hover:text-blue-600 dark:hover:text-blue-400"
            >
              {post.frontmatter.title}
            </a>
          </h2>
          <p class="text-gray-600 dark:text-gray-400 mb-4">
            {post.frontmatter.description}
          </p>
          <div class="flex items-center text-sm text-gray-500 dark:text-gray-500 space-x-4">
            <time datetime={post.frontmatter.dateUpdated}>
              {new Date(post.frontmatter.dateUpdated).toLocaleDateString(
                'en-US',
                {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                }
              )}
            </time>
            <span>Â·</span>
            <span>{formatReadingMetrics(post.readingMetrics)}</span>
          </div>
        </article>
      ))
    }
  </div>
</MainLayout>
