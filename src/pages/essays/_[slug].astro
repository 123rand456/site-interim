---
import EssayLayout from '../../layouts/EssayLayout.astro';
import { getCollection } from 'astro:content';
// Or for simpler setups without content collections:
// import fs from 'node:fs';
// import path from 'node:path';

export async function getStaticPaths() {
  // Method 1: Using content collections (recommended)
  const essays = await getCollection('essays');

  return essays.map((entry: any) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
  /* Method 2: Without content collections (alternative)
  const essayFiles = fs.readdirSync('./src/pages/essays')
    .filter(file => file.endsWith('.md'));
    
  return essayFiles.map(file => {
    const slug = file.replace('.md', '');
    return {
      params: { slug },
    };
  });
  */
}

// Method 1: With content collections
const { entry } = Astro.props;
const { Content } = await entry.render();

/* Method 2: Without content collections
const { slug } = Astro.params;
// Safety check to prevent directory traversal
if (slug.includes('/') || slug.includes('..')) {
  return Astro.redirect('/404');
}

let Content, frontmatter;
try {
  const post = await import(`./${slug}.md`);
  Content = post.Content;
  frontmatter = post.frontmatter;
} catch (e) {
  return Astro.redirect('/404');
}
*/

// Prepare metadata for the essay
const metadata = {
  title: entry.data.title,
  description: entry.data.description,
  dateCreated: entry.data.dateCreated,
  dateUpdated: entry.data.dateUpdated,
  confidence: entry.data.confidence,
  importance: entry.data.importance,
  tags: entry.data.tags,
};
---

<EssayLayout {...metadata}>
  <Content />
</EssayLayout>
