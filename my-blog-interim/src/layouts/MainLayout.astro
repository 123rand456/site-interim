---
import { SEO } from 'astro-seo';
import '../styles/global.css';

interface Props {
  title?: string;
  description?: string;
}

const { 
  title = "Chizubo's Essays and Research",
  description = "A collection of essays on technology, science, and philosophy."
} = Astro.props;

// JavaScript/TypeScript code here (imports, props, etc.)
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          title,
          type: "website",
          image: "/og-image.png"
        }
      }}
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body>
    <div class="wrapper min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
      <div class="container max-w-4xl mx-auto px-4 py-8">
        <header class="mb-8">
          <nav class="flex justify-between items-center">
            <a href="/" class="site-title text-2xl font-bold">chizubo</a>
            <div class="nav-links flex gap-4">
              <a href="/essays" class="nav-link hover:text-gray-600 dark:hover:text-gray-300">Essays</a>
              <a href="/about" class="nav-link hover:text-gray-600 dark:hover:text-gray-300">About</a>
              <button id="theme-toggle" class="theme-toggle p-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700">
                üåì
              </button>
            </div>
          </nav>
        </header>

        <main class="content prose dark:prose-invert max-w-none">
          <slot />
        </main>

        <footer class="site-footer mt-16 py-8 border-t border-gray-200 dark:border-gray-700">
          <p class="text-center text-gray-600 dark:text-gray-400">
            ¬© {new Date().getFullYear()} „Å°„Åö„Åº
          </p>
        </footer>
      </div>
    </div>

    <script>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();

      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }

      window.localStorage.setItem('theme', theme);

      document.getElementById('theme-toggle').addEventListener('click', () => {
        const element = document.documentElement;
        element.classList.toggle('dark');

        const isDark = element.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
    </script>
  </body>
</html> 